{
  "endpoints": [
    {
      "name": "MyChem.Info drug/compound query service",
      "methods": [
        {
          "MethodName": "Drug/Compound query service",
          "Synopsis": "Make drug/compound query and return matching drug/compound list. Support JSONP and CORS as well.",
          "HTTPMethod": "GET",
          "URI": "/v1/query",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "q",
              "Type": "string",
              "Required": "Y",
              "Description": "query string. Examples: \"drugbank.name:celecoxib\", \"chembl.atc_classifications:R06AE07\""
            },
            {
              "Name": "fields",
              "Type": "string",
              "Description": "a comma-separated fields to limit the fields returned from the matching drug/compound hits. The supported field names can be found from any drug/compound object (e.g. http://c.biothings.io/v1/query?q=drugbank.name:acetaminophen). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"chembl\", \"chembl.indication_class\", or \"chembl.molecule_properties.*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
            },
            {
              "Name": "size",
              "Type": "integer",
              "Description": " the maximum number of matching drug/compound hits to return (with a cap of 1000 at the moment). Default: 10. (e.g. http://c.biothings.io/v1/query?q=drugbank.name:ace*) . "
            },
            {
              "Name": "from",
              "Type": "integer",
              "Description": " the number of matching drug/compound hits to skip, starting from 0. Combining with \"size\" parameter, this can be useful for paging. Default: 0. e.g. http://c.biothings.io/v1/query?q=chembl.black_box_warning:true&size=5&from=10"
            },
            {
              "Name": "sort",
              "Type": "string",
              "Description": "the comma-separated fields to sort on. Prefix with \"-\" for descending order, otherwise in ascending order. Default: sort by matching scores in decending order."
            },
            {
              "Name": "facets",
              "Type": "string",
              "Description": "a single field or comma-separated fields to return facets, for example, http://c.biothings.io/v1/query?q=chembl.black_box_warning:true&facets=chembl.pref_name"
            },
            {
              "Name": "fetch_all",
              "Type": "string",
              "Description": "if TRUE, allows fast retrieval of all unsorted query hits in 1000 hit batches.  The return object contains a _scroll_id field, which when passed back to the query endpoint in the scroll_id parameter, returns the next 1000 unordered results. (e.g. http://c.biothings.io/v1/query?q=drugbank.name:ace*&fetch_all=TRUE) ."
            },
            {
              "Name": "scroll_id",
              "Type": "string",
              "Description": "the scroll_id from a previous request with fetch_all = TRUE.  When this request is made, the response contains the next 1000 unordered query hits from your query (until no hits are left to return).  As the query was supplied in the original query request (with fetch_all = TRUE), the query (q parameter) is ignored if scroll_id is supplied."
            },
            {
              "Name": "callback",
              "Type": "string",
              "Description": "you can pass a \"callback\" parameter to make a JSONP call."
            }
          ]
        },
        {
          "MethodName": "Drug/Compound query service via POST",
          "Synopsis": "Make Drug/Compound queries in batch",
          "HTTPMethod": "POST",
          "URI": "/v1/query",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "q",
              "Type": "string",
              "Required": "Y",
              "Description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard."
            },
            {
              "Name": "scopes",
              "Type": "string",
              "Required": "Y",
              "Description": "specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=drugbank.categories\", \"scopes=chembl.pref_name,chebi.formulae\". The available \"fields\" can be passed to \"scopes\"."
            },
            {
              "Name": "fields",
              "Type": "string",
              "Description": "a comma-separated fields to limit the fields returned from the matching drug/compound hits. The supported field names can be found from any drug/compound object (e.g. http://c.biothings.io/v1/drug/CALDTVBHJMBRTM-UHFFFAOYSA-N). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"chembl\", \"drugbank.name\", or \"chembl.molecule*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
            }
          ]
        }
      ]
    },
    {
      "name": "MyChem.Info drug/compound annotation services",
      "methods": [
        {
          "MethodName": "Drug/Compound annotation service",
          "Synopsis": "Retrieve drug/compound annotation based on InChIKey, and based on datasource specific ids if InChIKey is not available, support JSONP and CORS as well.",
          "HTTPMethod": "GET",
          "URI": "/v1/drug/:drugid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "drugid",
              "Type": "string",
              "Required": "Y",
              "Description": "InChIKey is drug/compound id, and if InChIKey is not available, data source specific id. e.g. CALDTVBHJMBRTM-UHFFFAOYSA-N (InChIKey based drugid), DB00001 (DrugBank id as a drugid since, InChIkey is not available)"
            },
            {
              "Name": "fields",
              "Type": "string",
              "Description": "a comma-separated fields to limit the fields returned from the matching drug/compound hits. The supported field names can be found from any drug/compound object (e.g. http://c.biothings.io/v1/drug/CALDTVBHJMBRTM-UHFFFAOYSA-N). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"drugbank\", \"drugbank.drug_interactions\", or \"chembl.atc_classifications.*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
            },
            {
              "Name": "callback",
              "Type": "string",
              "Description": "you can pass a \"callback\" parameter to make a JSONP call."
            }
          ]
        },
        {
          "MethodName": "Drug/Compound  annotation service via POST",
          "Synopsis": "Make drug/compound queries in batch for a list of InChIKey based ids",
          "HTTPMethod": "POST",
          "URI": "/v1/drug/",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "ids",
              "Type": "string",
              "Required": "Y",
              "Description": "multiple drug/compoundids seperated by comma, e.g., \"ids=CALDTVBHJMBRTM-UHFFFAOYSA-N,ZKLPARSLTMPFCP-UHFFFAOYSA-N\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted."
            },
            {
              "Name": "fields",
              "Type": "string",
              "Description": "a comma-separated fields to limit the fields returned from the matching drug/compound hits. The supported field names can be found from any drug/compound object (e.g. http://c.biothings.io/v1/drug/ZKLPARSLTMPFCP-UHFFFAOYSA-N). Note that it supports dot notation, and wildcards as well, e.g., you can pass \"pubchem\", \"drugbank.name\", or \"chembl.molecule*\". If \"fields=all\", all available fields will be returned. Default: \"all\"."
            }
          ]
        }
      ]
    },
    {
      "name": "MyChem.Info metadata service",
      "methods": [
        {
          "MethodName": "Metadata service",
          "Synopsis": "Get metadata about the data available from c.biothings.io",
          "HTTPMethod": "GET",
          "URI": "/v1/metadata",
          "parameters": [
            {
              "Name": "callback",
              "Type": "string",
              "Description": "you can pass a \"callback\" parameter to make a JSONP call."
            }
          ]
        },
        {
          "MethodName": "Available fields service",
          "Synopsis": "Get list of available fields in c.biothings.io",
          "HTTPMethod": "GET",
          "URI": "/v1/metadata/fields",
          "parameters": [
            {
              "Name": "callback",
              "Type": "string",
              "Description": "you can pass a \"callback\" parameter to make a JSONP call."
            }
          ]
        }
      ]
    }
  ]
}
